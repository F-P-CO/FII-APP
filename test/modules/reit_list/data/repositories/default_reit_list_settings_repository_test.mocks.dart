// Mocks generated by Mockito 5.0.13 from annotations
// in fii_app/test/modules/reit_list/data/repositories/default_reit_list_settings_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:fii_app/modules/reit_list/data/datasources/reit_list_settings_local_data_source.dart'
    as _i3;
import 'package:fii_app/modules/reit_list/domain/entities/reit_list_sort_option.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeSharedPreferences extends _i1.Fake implements _i2.SharedPreferences {
}

/// A class which mocks [ReitSettingsLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockReitSettingsLocalDataSource extends _i1.Mock
    implements _i3.ReitSettingsLocalDataSource {
  MockReitSettingsLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SharedPreferences get sharedPreferences =>
      (super.noSuchMethod(Invocation.getter(#sharedPreferences),
          returnValue: _FakeSharedPreferences()) as _i2.SharedPreferences);
  @override
  _i4.Future<List<_i5.ReitListSortOptionType>> getEnabledLists() =>
      (super.noSuchMethod(Invocation.method(#getEnabledLists, []),
              returnValue: Future<List<_i5.ReitListSortOptionType>>.value(
                  <_i5.ReitListSortOptionType>[]))
          as _i4.Future<List<_i5.ReitListSortOptionType>>);
  @override
  _i4.Future<bool> saveEnabledLists(List<_i5.ReitListSortOptionType>? lists) =>
      (super.noSuchMethod(Invocation.method(#saveEnabledLists, [lists]),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
  @override
  String toString() => super.toString();
}
