// Mocks generated by Mockito 5.0.13 from annotations
// in fii_app/test/modules/reit_list/presentation/stores/reit_list_settings_store_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:either_dart/either.dart' as _i3;
import 'package:fii_app/core/errors/failures.dart' as _i8;
import 'package:fii_app/modules/reit_list/domain/entities/reit_list_sort_option.dart'
    as _i6;
import 'package:fii_app/modules/reit_list/domain/repositories/reit_list_settings_repository.dart'
    as _i2;
import 'package:fii_app/modules/reit_list/domain/usecases/get_enabled_lists.dart'
    as _i4;
import 'package:fii_app/modules/reit_list/domain/usecases/save_enabled_lists.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeReitListSettingsRepository extends _i1.Fake
    implements _i2.ReitListSettingsRepository {}

class _FakeEither<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

/// A class which mocks [GetEnabledLists].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetEnabledLists extends _i1.Mock implements _i4.GetEnabledLists {
  MockGetEnabledLists() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ReitListSettingsRepository get reitListSettingsRepository =>
      (super.noSuchMethod(Invocation.getter(#reitListSettingsRepository),
              returnValue: _FakeReitListSettingsRepository())
          as _i2.ReitListSettingsRepository);
  @override
  _i5.Future<List<_i6.ReitListSortOptionType>> call() =>
      (super.noSuchMethod(Invocation.method(#call, []),
              returnValue: Future<List<_i6.ReitListSortOptionType>>.value(
                  <_i6.ReitListSortOptionType>[]))
          as _i5.Future<List<_i6.ReitListSortOptionType>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [SaveEnabledLists].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveEnabledLists extends _i1.Mock implements _i7.SaveEnabledLists {
  MockSaveEnabledLists() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ReitListSettingsRepository get reitListSettingsRepository =>
      (super.noSuchMethod(Invocation.getter(#reitListSettingsRepository),
              returnValue: _FakeReitListSettingsRepository())
          as _i2.ReitListSettingsRepository);
  @override
  _i5.Future<_i3.Either<_i8.Failure, bool>> call(
          List<_i6.ReitListSortOptionType>? lists) =>
      (super.noSuchMethod(Invocation.method(#call, [lists]),
              returnValue: Future<_i3.Either<_i8.Failure, bool>>.value(
                  _FakeEither<_i8.Failure, bool>()))
          as _i5.Future<_i3.Either<_i8.Failure, bool>>);
  @override
  String toString() => super.toString();
}
